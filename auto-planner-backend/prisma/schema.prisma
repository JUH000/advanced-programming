generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model StudyPreference {
  id             Int      @id @default(autoincrement())
  style          String
  studyDays      String[]
  sessionsPerDay Int
  userId         Int      @unique
  user           User     @relation(fields: [userId], references: [id])
}

model User {
  id                Int              @id @default(autoincrement())
  userId            String           @unique
  password          String
  tokenFreeLogin    Boolean          @default(true)
  createdAt         DateTime         @default(now())
  exams             Exam[]
  preference        StudyPreference?
  studyPlans        StudyPlan[]  
}

model Exam {
  id         Int       @id @default(autoincrement())
  subject    String
  startDate  DateTime
  endDate    DateTime
  importance Int
  userId     Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  chapters   Chapter[]
  user       User      @relation(fields: [userId], references: [id])
}

model Chapter {
  id            Int      @id @default(autoincrement())
  examId        Int
  chapterTitle  String
  difficulty    String
  contentVolume Int @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  exam          Exam     @relation(fields: [examId], references: [id])
}

model StudyPlan {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  subject    String
  startDate  DateTime
  endDate    DateTime
  databaseId String
  dailyPlans DailyPlan[]
}

model DailyPlan {
  id          Int         @id @default(autoincrement())
  date        DateTime
  content     String
  studyPlan   StudyPlan   @relation(fields: [studyPlanId], references: [id])
  studyPlanId Int
}
